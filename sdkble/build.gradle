plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

ext {
    versionMajor = '1'
    versionMinor = '0'
    versionBugfix = '0'
    versionExtra = ''
}

def githubProperties = new Properties()
def githubPropertiesFiles = rootProject.file("github.properties")

if (githubPropertiesFiles.exists())
    githubProperties.load(new FileInputStream(githubPropertiesFiles))

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'io.birota.zoov.sdkble'
                artifactId = 'sdkble'
                version = "$versionMajor.$versionMinor.$versionBugfix$versionExtra"

                //artifact("$buildDir/outputs/aar/$version-release.aar")
            }
        }

        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/birotaio/fifteen-android-sdk-ble-tech-test")
                credentials {
                    username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                    password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
                }
            }
        }
    }
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        versionCode 1
        versionName "$versionMajor.$versionMinor.$versionBugfix$versionExtra"

        buildConfigField 'int', 'VERSION_MAJOR', versionMajor
        buildConfigField 'int', 'VERSION_MINOR', versionMinor
        buildConfigField 'int', 'VERSION_BUGFIX', versionBugfix
        buildConfigField 'String', 'VERSION_EXTRA', "\"$versionExtra\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                def fileName = "${archivesBaseName}-${version}-${variant.buildType.name}.aar"
                output.outputFileName = fileName
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}